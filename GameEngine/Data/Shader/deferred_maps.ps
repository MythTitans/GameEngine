#version 330

in vec2 texCoords;
in vec3 normal;
in vec3 tangent;
in vec3 bitangent;

layout(location = 0) out vec4 finalColor;
layout(location = 1) out vec3 finalNormal;

uniform vec3 diffuseColor;
uniform sampler2D diffuseMap;
uniform sampler2D normalMap;

void main()
{
    mat3 TBN = mat3( normalize( tangent ), normalize( bitangent ), normalize( normal ) );

    vec3 tangentSpaceNormal = 2.0 * texture( normalMap, texCoords).rgb - vec3( 1.0 );
    vec3 worldSpaceNormal = TBN * tangentSpaceNormal;

    finalColor = vec4( diffuseColor * texture( diffuseMap, texCoords ).rgb, 1.0 );
    finalNormal = normalize( worldSpaceNormal ) * 0.5 + vec3( 0.5, 0.5, 0.5 );
}