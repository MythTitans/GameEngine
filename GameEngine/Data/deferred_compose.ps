#version 330

in vec2 uv;

out vec4 finalColor;

uniform sampler2D colorMap;
uniform sampler2D normalMap;
uniform sampler2D depthMap;

uniform mat4 inverseViewProjection;

void main()
{
    vec4 position = vec4( 2 * vec3( uv.x, uv.y, texture( depthMap, uv).r ) - vec3( 1, 1, 1 ), 1 );
    position = inverseViewProjection * position;
    position /= position.w;

    vec3 normal = normalize( 2 * texture( normalMap, uv ).rgb - vec3( 1, 1, 1 ) );

    float intensity = max( dot( normalize( vec3( 10, 10, 10 ) - position.xyz ), normal ), 0 );
    finalColor = vec4( intensity * texture( colorMap, uv ).rgb, 1 );
}